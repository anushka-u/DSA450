Given an array Arr[] of N integers. Find the contiguous sub-array(containing at least one number) which has the maximum sum and return its sum.


Example 1:

Input:
N = 5
Arr[] = {1,2,3,-2,5}
Output:
9
Explanation:
Max subarray sum is 9
of elements (1, 2, 3, -2, 5) which
is a contiguous subarray.
-------------------------------------------------------------------------------------

APPROACH 1 -------

There are two approach to solve:
first by using brute approach in which we will be running nested loop
i=0 to i =n-1
    j=i to j=n-1

we will maintain two variables Current_sum nd Max_Sum and in every sub_array loop we will check
if(current_sum >max_sum) => yes then we will set max_sum = current_sum
otherwise will continue

APPROACH 2-------------------
Second approach is using Kadane's algorithm:


Kadaneâ€™s Algorithm is an iterative dynamic programming algorithm. It calculates the maximum sum subarray ending at a particular position by using the maximum sum subarray ending at the previous position. Follow the below steps to solve the problem.

Define two-variable currSum which stores maximum sum ending here and maxSum which stores maximum sum so far.
Initialize currSum with 0 and maxSum with INT_MIN.
Now, iterate over the array and add the value of the current element to currSum and check
If currSum is greater than maxSum, update maxSum equals to currSum.
If currSum is less than zero, make currSum equal to zero.
Finally, print the value of maxSum.
