Easy Level Problems
Factorial of a Number -- DONE

Description: Compute the factorial of a number n. --DONE
Input: n = 5
Output: 120

_______________________________________________________________________
Fibonacci Sequence --DONE

Description: Compute the nth Fibonacci number.
Input: n = 6
Output: 8

_________________________________________________________________________
Sum of Digits -- DONE
Description: Find the sum of digits of a number.
Input: n = 123
Output: 6

__________________________________________________________________________
Reverse a String -- DONE

Description: Reverse a string using recursion.
Input: str = "abc"
Output: "cba"
______________________________________________________________
Count Digits in a Number -- DONE

Description: Count the number of digits in a number.
Input: n = 12345
Output: 5
_________________________________________________________________________________
Check if a Number is Prime -- DONE

Description: Check if a number is prime using recursion.
Input: n = 7
Output: true
______________________________________________________________________________________
Power of a Number -- DONE

Description: Compute x^n using recursion.
Input: x = 2, n = 3
Output: 8
_________________________________________________________________________________
GCD (Greatest Common Divisor) of Two Numbers

Description: Find the GCD of two numbers using recursion.
Input: a = 56, b = 98
Output: 14
__________________________________________________________________________________
Count Occurrences of a Character in a String -- DONE

Description: Count occurrences of a character in a string using recursion.
Input: str = "hello", char = 'l'
Output: 2
________________________________________________________________________________
Sum of Array Elements -- DONE

Description: Find the sum of elements in an array using recursion.
Input: arr = [1, 2, 3, 4]
Output: 10
__________________________________________________________________________
____________________________________________________________________________________________
Medium Level Problems
Palindrome Check -- DONE

Description: Check whether a string is a palindrome using recursion.
Input: str = "madam"
Output: true
__________________________________________________________________________________
Print All Subsets of a Set -- DONE

Description: Print all subsets of a given set using recursion.
Input: arr = [1, 2, 3]
Output: [[], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]]
_________________________________________________________________________________________
Generate All Permutations of a String

Description: Generate all possible permutations of a string using recursion.
Input: str = "ABC"
Output: ["ABC", "ACB", "BAC", "BCA", "CAB", "CBA"]
___________________________________________________________________________________________
Print All Combinations of a String -- DONE

Description: Print all combinations of a string.
Input: str = "AB"
Output: ["", "A", "B", "AB"]
___________________________________________________________________________________________
Tower of Hanoi -- DONE

Description: Solve the Tower of Hanoi problem.
Input: n = 3 (number of disks)
Output: List of moves to solve the puzzle.
_____________________________________________________________________________________
Find the Maximum Element in an Array -- DONE

Description: Find the maximum element in an array using recursion.
Input: arr = [1, 3, 5, 2]
Output: 5
_________________________________________________________________________________
Binary Search -- DONE

Description: Perform binary search on a sorted array using recursion.
Input: arr = [1, 2, 3, 4, 5], target = 3
Output: 2 (index of the element)
___________________________________________________________________________________
Check for Balanced Parentheses -- DONE

Description: Check if parentheses in a string are balanced using recursion.
Input: str = "(())"
Output: true
______________________________________________________________________________________
Print Fibonacci Series -- DONE

Description: Print the first n Fibonacci numbers using recursion.
Input: n = 5
Output: [0, 1, 1, 2, 3]
______________________________________________________________________________________
Subset Sum Problem

Description: Check if a subset with a given sum exists using recursion.
Input: arr = [3, 34, 4, 12, 5, 2], sum = 9
Output: true

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
__________________________________________________________________________
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Hard Level Problems
Subset Sum Problem (All Subsets)

Description: Find all subsets of a set whose sum equals a given target.
Input: arr = [3, 34, 4, 12, 5, 2], sum = 9
Output: [[3, 4, 2], [4, 5], [9]]
_________________________________________________________________________
Find All Possible Combinations of Coins (Coin Change Problem)

Description: Given coins of different denominations, find all ways to make a total sum.
Input: coins = [1, 2, 3], total = 4
Output: [[1, 1, 1, 1], [1, 3], [2, 2]]
__________________________________________________________________________________
N-Queens Problem

Description: Solve the N-Queens problem using recursion.
Input: n = 4
Output: Possible board configurations where n queens can be placed such that no two queens attack each other.
______________________________________________________________________________________________________
Count the Number of Paths in a Maze

Description: Count the number of ways to go from the top-left corner to the bottom-right corner of a maze.
Input: maze = [[1, 0, 0], [1, 1, 0], [1, 1, 1]]
Output: 2 (2 paths from start to end)
_______________________________________________________________________________________________________
Permutations with Duplicates

Description: Find all permutations of a string where some characters may be repeated.
Input: str = "AAB"
Output: ["AAB", "ABA", "BAA"]
_______________________________________________________________________________________________________
Count Ways to Climb Stairs

Description: Given n stairs, count the number of ways to reach the top by climbing 1 or 2 steps at a time.
Input: n = 4
Output: 5 (Ways: 1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2)
_________________________________________________________________________________________
Sum of Subsets

Description: Find the sum of all subsets of a given set.
Input: arr = [1, 2, 3]
Output: 6 (Sum of all subsets: [], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3])
____________________________________________________________________________________
String to Integer (atoi)

Description: Implement the atoi function which converts a string to an integer.
Input: str = "123"
Output: 123
________________________________________________________________________________________
String Matching (Wildcard)

Description: Implement a function to match a string with a wildcard pattern.
Input: str = "aa", pattern = "a*"
Output: true
__________________________________________________________________________________________
Longest Common Subsequence

Description: Find the longest common subsequence of two strings.
Input: str1 = "AGGTAB", str2 = "GXTXAYB"
Output: 4 (The longest common subsequence is GTAB)